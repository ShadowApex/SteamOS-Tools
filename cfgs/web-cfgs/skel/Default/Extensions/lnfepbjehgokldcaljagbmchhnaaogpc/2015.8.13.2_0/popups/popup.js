/*! CKP - KeePass integration for Chromeâ„¢, Copyright 2015 Steven Campbell
*/
"use strict";var keepassApp=angular.module("keepassApp",["ngAnimate","ngRoute","ngSanitize"]);keepassApp.config(["$routeProvider",function($routeProvider){$routeProvider.when("/choose-file",{templateUrl:chrome.extension.getURL("/popups/partials/choose-file.html"),controller:"chooseFileController"}).when("/enter-password/:providerKey/:fileTitle",{templateUrl:chrome.extension.getURL("/popups/partials/enter-password.html"),controller:"masterPasswordController"}).when("/find-entry",{templateUrl:chrome.extension.getURL("/popups/partials/find-entry.html"),controller:"findEntryController"}).when("/startup",{templateUrl:chrome.extension.getURL("/popups/partials/startup.html"),controller:"startupController"}).when("/entry-details/:entryId",{templateUrl:chrome.extension.getURL("/popups/partials/entry-details.html"),controller:"entryDetailsController"}).otherwise({redirectTo:"/startup"})}]),keepassApp.factory("pako",function(){return pako}),keepassApp.factory("passwordFileStoreRegistry",["localChromePasswordFileManager","dropboxFileManager","googleDrivePasswordFileManager","sampleDatabaseFileManager",function(localChromePasswordFileManager,dropboxFileManager,googleDrivePasswordFileManager,sampleDatabaseFileManager){return new PasswordFileStoreRegistry(localChromePasswordFileManager,dropboxFileManager,googleDrivePasswordFileManager,sampleDatabaseFileManager)}]),keepassApp.factory("sampleDatabaseFileManager",["$http",function($http){return new SampleDatabaseFileManager($http)}]),keepassApp.factory("dropboxFileManager",["$http","settings",function($http,settings){return new DropboxFileManager($http,settings)}]),keepassApp.factory("googleDrivePasswordFileManager",["$http","$timeout",function($http,$timeout){return new GoogleDrivePasswordFileManager($http,$timeout)}]),keepassApp.factory("localChromePasswordFileManager",[function(){return new LocalChromePasswordFileManager}]),keepassApp.factory("optionsLink",[function(){return new OptionsLink}]),keepassApp.factory("settings",[function(){return new Settings}]),keepassApp.factory("localStorage",["settings",function(settings){return new LocalStorage(settings)}]),keepassApp.factory("protectedMemory",[function(){return new ProtectedMemory}]),keepassApp.factory("keepassHeader",[function(){return new KeepassHeader(pako,localStorage)}]),keepassApp.factory("keepass",["keepassHeader","pako","settings","passwordFileStoreRegistry",function(keepassHeader,pako,settings,passwordFileStoreRegistry){return new Keepass(keepassHeader,pako,settings,passwordFileStoreRegistry)}]),keepassApp.factory("unlockedState",["$interval","$location","keepass","protectedMemory",function($interval,$location,keepass,protectedMemory){return new UnlockedState($interval,$location,keepass,protectedMemory)}]),keepassApp.factory("secureCacheMemory",["protectedMemory",function(protectedMemory){return new SecureCacheMemory(protectedMemory)}]),keepassApp.factory("secureCacheDisk",["protectedMemory","secureCacheMemory","settings",function(protectedMemory,secureCacheMemory,settings){return new SecureCacheDisk(protectedMemory,secureCacheMemory,settings)}]),keepassApp.controller("startupController",["$scope","$location","settings","optionsLink","passwordFileStoreRegistry",StartupController]),keepassApp.controller("chooseFileController",["$scope","$location","passwordFileStoreRegistry","settings",ChooseFileController]),keepassApp.controller("masterPasswordController",["$scope","$routeParams","$location","keepass","localStorage","unlockedState","secureCacheDisk","settings","optionsLink",MasterPasswordController]),keepassApp.controller("findEntryController",["$scope","unlockedState","secureCacheDisk",FindEntryController]),keepassApp.controller("entryDetailsController",["$scope","$routeParams","$location","unlockedState",EntryDetailsController]),keepassApp.directive("icon",function(){function link(scope,element,attrs){function renderSVG(){var icon=element.scope()[attrs.p];icon||(icon=attrs.p);var html='<svg class="icon '+icon+'"><use xlink:href="#'+icon+'"></use></svg>';element.replaceWith(html)}renderSVG()}return{link:link,restrict:"E"}}),keepassApp.directive("fileChange",function(){return{restrict:"A",link:function(scope,element,attrs){var onChangeFunc=element.scope()[attrs.fileChange];element.bind("change",function(e){for(var f,files=e.target.files,loadedFiles=[],i=0;f=files[i];i++){var loadedFile=new Promise(function(resolve,reject){var reader=new FileReader;reader.onloadend=function(theFile){return function(e){resolve({data:e.target.result,file:theFile})}}(f),reader.onerror=reader.onabort=function(){return function(){reject(new Error("File upload failed"))}}(f),reader.readAsArrayBuffer(f)});loadedFiles.push(loadedFile)}onChangeFunc(loadedFiles)})}}}),keepassApp.directive("droppable",function(){return{scope:{drop:"&",bin:"="},link:function(scope,element){var el=element[0];el.addEventListener("dragover",function(e){return e.dataTransfer.dropEffect="copy",e.preventDefault&&e.preventDefault(),this.classList.add("over"),!1},!1),el.addEventListener("dragenter",function(){return this.classList.add("over"),!1},!1),el.addEventListener("dragleave",function(){return this.classList.remove("over"),!1},!1),el.addEventListener("drop",function(e){e.stopPropagation(),e.preventDefault(),this.classList.remove("over");for(var f,files=e.dataTransfer.files,loadedFiles=[],i=0;f=files[i];i++){var loadedFile=new Promise(function(resolve,reject){var reader=new FileReader;reader.onloadend=function(theFile){return function(e){resolve({data:e.target.result,file:theFile})}}(f),reader.onerror=reader.onabort=function(){return function(){reject(new Error("File upload failed"))}}(f),reader.readAsArrayBuffer(f)});loadedFiles.push(loadedFile)}return scope.$apply(function(scope){var fn=scope.drop();"undefined"!=typeof fn&&fn(loadedFiles)}),!1},!1)}}}),keepassApp.directive("autoFocus",function($timeout){return{restrict:"AC",link:function(_scope,_element){$timeout(function(){_element[0].focus()})}}}),keepassApp.directive("staticInclude",function($http,$templateCache,$compile){return function(scope,element,attrs){var templatePath=attrs.staticInclude;$http.get(templatePath,{cache:$templateCache}).success(function(response){var contents=element.html(response).contents();$compile(contents)(scope)})}});