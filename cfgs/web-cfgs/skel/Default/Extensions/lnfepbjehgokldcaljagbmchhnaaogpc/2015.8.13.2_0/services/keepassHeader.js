/*! CKP - KeePass integration for Chromeâ„¢, Copyright 2015 Steven Campbell
*/
"use strict";function KeepassHeader(){function readHeader(buf){var sigHeader=new DataView(buf,0,8),h={sigKeePass:sigHeader.getUint32(0,littleEndian),sigKeePassType:sigHeader.getUint32(4,littleEndian)},DBSIG_KEEPASS=2594363651,DBSIG_KDBX=3041655655,DBSIG_KDBX_ALPHA=3041655654,DBSIG_KDB=3041655637,DBSIG_KDB_NEW=3041655653;if(h.sigKeePass!=DBSIG_KEEPASS||h.sigKeePassType!=DBSIG_KDBX&&h.sigKeePassType!=DBSIG_KDBX_ALPHA&&h.sigKeePassType!=DBSIG_KDB&&h.sigKeePassType!=DBSIG_KDB_NEW)throw console.log("Signature fail.  sig 1:"+h.sigKeePass.toString(16)+", sig2:"+h.sigKeePassType.toString(16)),new Error("This is not a valid KeePass file - file signature is not correct.");return h.sigKeePassType==DBSIG_KDBX||h.sigKeePassType==DBSIG_KDBX_ALPHA?readKdbxHeader(buf,8,h):readKdbHeader(buf,8,h),h}function readKdbHeader(buf,position,h){var FLAG_RIJNDAEL=2,dv=new DataView(buf,position,116),flags=dv.getUint32(0,littleEndian);if(flags&FLAG_RIJNDAEL!=FLAG_RIJNDAEL)throw new Error("We only support AES (aka Rijndael) encryption on KeePass KDB files.  This file is using something else.");try{h.cipher=AES_CIPHER_UUID,h.majorVersion=dv.getUint16(4,littleEndian),h.minorVersion=dv.getUint16(6,littleEndian),h.masterSeed=new Uint8Array(buf,position+8,16),h.iv=new Uint8Array(buf,position+24,16),h.numberOfGroups=dv.getUint32(40,littleEndian),h.numberOfEntries=dv.getUint32(44,littleEndian),h.contentsHash=new Uint8Array(buf,position+48,32),h.transformSeed=new Uint8Array(buf,position+80,32),h.keyRounds=dv.getUint32(112,littleEndian),h.keyRounds2=0,h.compressionFlags=0,h.protectedStreamKey=window.crypto.getRandomValues(new Uint8Array(16)),h.innerRandomStreamId=0,h.streamStartBytes=null,h.kdb=!0,h.dataStart=position+116}catch(err){throw new Error("Failed to parse KDB file header - file is corrupt or format not supported")}}function readKdbxHeader(buf,position,h){try{var version=new DataView(buf,position,4);h.majorVersion=version.getUint16(0,littleEndian),h.minorVersion=version.getUint16(2,littleEndian),position+=4;for(var done=!1;!done;){var descriptor=new DataView(buf,position,3),fieldId=descriptor.getUint8(0,littleEndian),len=descriptor.getUint16(1,littleEndian),dv=new DataView(buf,position+3,len);switch(position+=3,fieldId){case 0:done=!0;break;case 2:h.cipher=new Uint8Array(buf,position,len);break;case 3:h.compressionFlags=dv.getUint32(0,littleEndian);break;case 4:h.masterSeed=new Uint8Array(buf,position,len);break;case 5:h.transformSeed=new Uint8Array(buf,position,len);break;case 6:h.keyRounds=dv.getUint32(0,littleEndian),h.keyRounds2=dv.getUint32(4,littleEndian);break;case 7:h.iv=new Uint8Array(buf,position,len);break;case 8:h.protectedStreamKey=new Uint8Array(buf,position,len);break;case 9:h.streamStartBytes=new Uint8Array(buf,position,len);break;case 10:h.innerRandomStreamId=dv.getUint32(0,littleEndian)}position+=len}h.kdbx=!0,h.dataStart=position}catch(err){throw new Error("Failed to parse KDBX file header - file is corrupt or format not supported")}}var my={readHeader:readHeader},AES_CIPHER_UUID=new Uint8Array([49,193,242,230,191,113,67,80,190,88,5,33,106,252,90,255]),littleEndian=function(){var buffer=new ArrayBuffer(2);return new DataView(buffer).setInt16(0,256,!0),256===new Int16Array(buffer)[0]}();return my}