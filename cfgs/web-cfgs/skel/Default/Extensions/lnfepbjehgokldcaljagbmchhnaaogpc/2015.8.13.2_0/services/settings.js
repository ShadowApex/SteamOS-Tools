/*! CKP - KeePass integration for Chromeâ„¢, Copyright 2015 Steven Campbell
*/
"use strict";function Settings(){var exports={};return exports.upgrade=function(){exports.getDatabaseUsages().then(function(usages){for(var usageKey in usages){var usage=usages[usageKey];usage.keyFileName&&usage.fileKeyBase64&&exports.addKeyFile(usage.keyFileName,Base64.decode(usage.fileKeyBase64)),usage.fileKeyBase64=void 0,usage.forgetKeyFile=void 0}exports.saveDatabaseUsages(usages)}),chrome.p.storage.local.get(["passwordFile","providerKey"]).then(function(items){items.passwordFile&&items.providerKey&&chrome.p.storage.local.set({selectedDatabase:{providerKey:items.providerKey,passwordFile:items.passwordFile}}).then(function(){chrome.p.storage.local.set.remove(["passwordFile","providerKey"])})})},exports.getKeyFiles=function(){return chrome.p.storage.local.get(["keyFiles"]).then(function(items){return items.keyFiles||[]})},exports.deleteKeyFile=function(name){return exports.getKeyFiles().then(function(keyFiles){return keyFiles.forEach(function(keyFile,index){keyFile.name==name&&keyFiles.splice(index,1)}),chrome.p.storage.local.set({keyFiles:keyFiles})})},exports.addKeyFile=function(name,key){return exports.getKeyFiles().then(function(keyFiles){var matches=keyFiles.filter(function(keyFile){return keyFile.name==name}),encodedKey=Base64.encode(key);return matches.length?matches[0].encodedKey=encodedKey:keyFiles.push({name:name,encodedKey:encodedKey}),chrome.p.storage.local.set({keyFiles:keyFiles})})},exports.setDiskCacheFlag=function(val){return chrome.p.storage.local.set({useDiskCache:val})},exports.getDiskCacheFlag=function(){return chrome.p.storage.local.get("useDiskCache").then(function(items){return items.useDiskCache})},exports.saveDatabaseUsages=function(usages){return chrome.p.storage.local.set({databaseUsages:usages})},exports.getDatabaseUsages=function(){return chrome.p.storage.local.get(["databaseUsages"]).then(function(items){return items.databaseUsages=items.databaseUsages||{},items.databaseUsages})},exports.saveCurrentDatabaseChoice=function(passwordFile,provider){return passwordFile=angular.copy(passwordFile),passwordFile.data=void 0,chrome.p.storage.local.set({selectedDatabase:{passwordFile:passwordFile,providerKey:provider.key}})},exports.getCurrentDatabaseChoice=function(){return chrome.p.storage.local.get(["selectedDatabase"]).then(function(items){return items.selectedDatabase?items.selectedDatabase:null})},exports.saveLicense=function(license){return chrome.p.storage.local.set({license:license})},exports.getLicense=function(){return chrome.p.storage.local.get(["license"]).then(function(items){return items.license?items.license:null})},exports.saveDropboxToken=function(accessToken){return chrome.p.storage.local.set({dropboxAccessToken:accessToken})},exports.getDropboxToken=function(){return chrome.p.storage.local.get(["dropboxAccessToken"]).then(function(items){return items.dropboxAccessToken?items.dropboxAccessToken:null})},exports}